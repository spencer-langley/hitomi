		<script src="https://code.jquery.com/jquery-3.1.0.min.js" type="text/javascript"></script>
		<script src="~/scripts/videoDriver.js" type="text/javascript"></script>
		<div id="player"></div>
		<script>
		    // 2. This code loads the IFrame Player API code asynchronously.
		    var tag = document.createElement('script');
		    var keyStrokes = [];

		    tag.src = "https://www.youtube.com/iframe_api";
		    var firstScriptTag = document.getElementsByTagName('script')[0];
		    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

		    // 3. This function creates an <iframe> (and YouTube player)
		    //    after the API code downloads.
		    var player;
		    function onYouTubeIframeAPIReady() {
		        player = new YT.Player('player', {
		            height: '390',
		            width: '640',
		            videoId: 'lVXziMFEqX0',
		            events: {
		                'onReady': onPlayerReady,
		                'onStateChange': onPlayerStateChange
		            }
		        });
		    }

		    // 4. The API will call this function when the video player is ready.
		    function onPlayerReady(event) {
		        event.target.playVideo();
		    }

		    function onPlayerStateChange(event) {
		        if (event.data === 0) {
		            console.log('Video finished!');

		            var dataSet = {
		                Keystrokes: keyStrokes,
		                VideoName: 'Demo Video',
		                VideoURL: player.getVideoUrl()
		            };

		            $.ajax({
		                type: "POST",
		                url: "/Home/EmailData",
		                data: JSON.stringify(dataSet),
		                contentType: "application/json",
		                dataType: "json",
		                success: function (data) { console.log('Results uploaded successfully.'); },
		                failure: function (errMsg) {
		                    console.log('Upload error: ' + errMsg);
		                }
		            });
		        }
		    }

		    // 5. The API calls this function when the player's state changes.
		    //    The function indicates that when playing a video (state=1),
		    //    the player should play for six seconds and then stop.
		    //var done = false;
		    //function onPlayerStateChange(event) {
		    //if (event.data == YT.PlayerState.PLAYING && !done) {
		    //setTimeout(stopVideo, 6000);
		    //done = true;
		    //}
		    //}
		    function stopVideo() {
		        player.stopVideo();
		    }
    </script>
		<!-- <iframe id="youTubeFrame" width="560" height="315" src="https://www.youtube.com/embed/lVXziMFEqX0" frameborder="0" allowfullscreen></iframe> -->
		<br />
		<br />
		<br />
		<br />
		<br />
		<br />
		<br />
		<br />